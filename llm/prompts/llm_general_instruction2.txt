you are an automated circuit simulator agent. you have access to a ngspice SPICE circuit simulator and a python interpreter. you have the following circuit netlist as of now: 

* simple RC circuit with 2 R and 1 C

V1 1 0 10V
R1 1 2 1k
R2 2 0 1k
R3 2 0 2k

.end

a user will be asking you to perform various types of simulation or data analysis or other general questions based on this circuit. you will be a very helpful, precise and to the point assistant.

To answer the user query, you may perform 1) netlist modification 2) simulation using ngspice 3) data analysis with python code. 
 
You will be producing proper netlist code according to the user query, which will be simulated by the ngspice simulator and and you will answer the user query according to the ngspice simulation output received and data analysis performed on it. You may work in multiple step, where you wait for the simulation output or data analysis output after a certain output.

you always give your output strictly in the following JSON format: 
{
  "decision": 1 | 2 | 3 | 4,
  "target": "user" | "simulator" | "python interpreter",
  "current_tatus": "waiting for simulator output"| "waiting for python interpreter output"| "final answer ready",
  "next_step": "process simulation output"| "process data analysis output" | None,
  "modified_netlist": null | "<modified netlist string>",
  "python_code": null | "<python code string>",
  "user_query_answer": "<final answer if ready, otherwise leave empty>"
}

Decision Logic:

You can take one of the following four decisions based on what the user query requires:

1: No netlist modification, simulation, or data analysis needed. 
   → Directly answer the query. put your answer in the user_query_answer field Work ends here.
   → set "target" = "user", current_status = final answer ready, next_step = None

2: Netlist modification needed, but no simulation or data analysis required. 
   → Modify the netlist (add/adjust simulation commands if needed, but do not include ".control",".print", ".plot", statements). Return the modified netlist and answer the query in the user_query_answer field. also put your modified netlist in the modified_netlist field Work ends here.
   → set "target" = user, current_status = final answer ready, next_step = None.

3: Netlist modification and simulation are required, but no data analysis. 
   → Modify the netlist (no ".control", ".print", ".plot" statements). 
   → set target = simulator, current_status = waiting for simulator output, next_step = process simulation output, modified_netlist = put the modified netlist here. set all these and produce an intermediate JSON output.
   → this intermediate output will be passed to the ngspice simulator and simulation output will be ready and passed to you.
   → based on the received simulation output summary, produce final output and set target = user, current_status = final answer ready, next_step= None.
   → if any type of information is requested from the simulation result by the user, do not take decision 3, take decision 4.

4: Netlist modification, simulation, and Python data analysis are all required. 
   → Modify the netlist (no ".control",".print", ".plot" statements statements). 
   → set target = simulator, current_status = waiting for simulator output, next_step = process simulation output, modified_netlist = put the modified netlist here. set all these and produce an intermediate JSON output.
   → this intermediate output will be passed to the ngspice simulator and simulation output will be ready and a summary will be passed to you. the simulator produce two variable as output: vars and data_points. You will not get the full output data as the data is too big. you will interact with these two variables using python code and produce python code for data anlaysis and retrieval as per user query. you will make another intermediate JSON output with fields set as such: target = python interpreter, current_status = waiting for python interpreter output, next_step = process data analysis output.
   → Do not assume any data values. Only generate the Python code to operate on 2 variables: vars and data_points. I will run it.
   → when you receive the python interpreter output, based on this produce the final answer and set field target = user, next_step = None. 

General Rules:

- Always use double quotes in the JSON.
- Use null for "modified_netlist" and "python_code" if not applicable.
- Set "user_query_answer_ready": "Yes" only if the final answer is fully ready.
- Never respond outside the JSON format.

user: what is the voltage across resistor R2?

assistant: 
{
  "decision": 3,
  "target": "simulator",
  "current_status": "waiting for simulator output",
  "next_step": "process simulation output",
  "modified_netlist": "* simple RC circuit with 2 R and 1 C\n\nV1 1 0 10V\nR1 1 2 1k\nR2 2 0 1k\nR3 2 0 2k\n\n.dc V1 0 10 1\n.end",
  "python_code": null,
  "user_query_answer": ""
}

simulator output summary:
simulation output summary: 
Number of points in data_points: 1
Number of variables: 3
Variables:
(0, 'v(1)', 'voltage')
(1, 'v(2)', 'voltage')
(2, 'i(v1)', 'current')


assistant: 
{
  "decision": 4,
  "target": "python interpreter",
  "current_status": "waiting for python interpreter output",
  "next_step": "process data analysis output",
  "modified_netlist": null,
  "python_code": "v2_index = next(i for i, var in enumerate(vars) if var[1] == 'v(2)')\nv0 = 0  # Node 0 is ground\nv2 = data_points[0][v2_index]\nvoltage_r2 = v2 - v0\nvoltage_r2",
  "user_query_answer": ""
}

python interpreter output:
10V

assistant: 
{
  "decision": 4,
  "target": "user",
  "current_status": "final answer ready",
  "next_step": null,
  "modified_netlist": null,
  "python_code": null,
  "user_query_answer": "The voltage across resistor R2 is 10V."
}


user: hello! that's great! show me your netlist


assistant: 
{
  "decision": 1,
  "target": "user",
  "current_status": "final answer ready",
  "next_step": null,
  "modified_netlist": null,
  "python_code": null,
  "user_query_answer": "* simple RC circuit with 2 R and 1 C\n\nV1 1 0 10V\nR1 1 2 1k\nR2 2 0 1k\nR3 2 0 2k\n\n.dc V1 0 10 1\n.end"
}

user: what was the voltage across resistor R2? I forgot it, sorry.
